name: Docker Build & Push

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO_SUFFIX: "dev"

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          # Find all Dockerfiles in non-hidden directories
          find . -type f \( -name "*.Dockerfile" -o -name "Dockerfile" \) \
          | grep -v '/\.[^/]*/' > dockerfiles.txt

          echo "Discovered files:"
          cat dockerfiles.txt

          # Generate JSON that meets the matrix requirements
          jq -c -Rn '[inputs | select(. != "")]' < dockerfiles.txt > matrix.json
          echo "matrix={\"file\":$(cat matrix.json)}" >> $GITHUB_OUTPUT

  build-push:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.discover.outputs.matrix) }}
      fail-fast: false
      max-parallel: 4

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ hashFiles(matrix.file) }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-${{ hashFiles(matrix.file) }}-
            buildx-${{ runner.os }}-

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        run: |
          file="${{ matrix.file }}"
          dir_path=$(dirname "$file")
          folder=$(basename "$dir_path")
          sanitized_folder=$(echo "$folder" | tr '[:upper:]' '[:lower:]' | tr -cd '[:alnum:]-_')
          repo_name="${sanitized_folder}-${DOCKERHUB_REPO_SUFFIX}"
          tag=$(basename "$file" | sed 's/\.[^.]*$//; s/Dockerfile/latest/; s/[^a-zA-Z0-9_.-]/-/g')

          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -f "$file" \
            -t "$DOCKERHUB_USER/$repo_name:$tag" \
            --push \
            "$dir_path"
          echo "Docker image $DOCKERHUB_USER/$repo_name:$tag built and pushed successfully."
