name: Docker Build & Push

on:
  workflow_dispatch:    # Manual trigger
  schedule:
    - cron: '0 0 * * 0' # Weekly build every Sunday UTC

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO_SUFFIX: "dev"  # Repository suffix

jobs:
  docker-pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        file: ${{ fromJson(steps.finder.outputs.files) }}
      fail-fast: false
      max-parallel: 4

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Docker Setup
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles(matrix.file) }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Discover Dockerfiles
        id: finder
        run: |
          # Find all Dockerfiles excluding hidden directories
          find . -name "*.Dockerfile" -o -name "Dockerfile" \
            | grep -v '/\.[^/]*/' > dockerfiles.txt
          echo "Discovered files: $(cat dockerfiles.txt)"
          echo "files=$(jq -Rn '[inputs]' < dockerfiles.txt)" >> $GITHUB_OUTPUT

      - name: Build & Push
        run: |
          file="${{ matrix.file }}"
          # Parse directory structure
          dir_path=$(dirname "$file")
          folder=$(echo "$dir_path" | cut -d'/' -f2)

          # Generate repository name
          repo_name="${folder}-${DOCKERHUB_REPO_SUFFIX}"

          # Process tags
          filename=$(basename "$file")
          if [ "$filename" = "Dockerfile" ]; then
            tag="latest"
          else
            tag=$(echo "$filename" | sed 's/\.[^.]*$//') # Remove extension
          fi

          # Build with caching
          echo "ðŸ›  Building $repo_name:$tag from $file"
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -f "$file" \
            -t "$DOCKERHUB_USER/$repo_name:$tag" \
            --push \
            "$dir_path"
